#[unsafe]
#[vararg]
#[extern("C")]
fn printf(fmt: &[u8]) -> i32;

/*fn fibonacci(i: u32) -> u32{
    if i <= 2u32 {
        return 1u32
    } else {
        return fibonacci(i - 1u32) + fibonacci(i - 2u32)
    }
    return 0u32
}*/

/*fn fibonacci(i: u32) -> u32{
    if i <= 2u32 {
        return 1u32
    } else {
        return fibonacci(i - 1u32) + fibonacci(i - 2u32)
    }
}*/

/*fn fibonacci(i: u32) -> u32{
    return if i <= 2u32 {
        1u32
    } else {
        fibonacci(i - 1u32) + fibonacci(i - 2u32)
    }
}*/

fn fibonacci(i: u32) -> u32{
    if i <= 2u32 {
        1u32
    } else {
        fibonacci(i - 1u32) + fibonacci(i - 2u32)
    }
}

/*fn fibonacci(i: u32) -> u32{
    if i <= 2u32 {
        return 1u32
    }
    return fibonacci(i - 1u32) + fibonacci(i - 2u32)
}*/

fn run_fib(i: u32){
    #[unsafe]
    printf(&"fib(%d) = %d\n", i, fibonacci(i));
}

fn main(){
    run_fib(1u32);
    run_fib(2u32);
    run_fib(3u32);
    run_fib(4u32);
    run_fib(5u32);
    run_fib(6u32);
    run_fib(7u32);
    run_fib(8u32);
    run_fib(9u32);
    run_fib(10u32);
    run_fib(11u32);
    run_fib(12u32);
}